@model APP.Models.UserInput

@{
    ViewData["Title"] = "Signup";
}

<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="~/Changepassword.cshtml.css" asp-append-version="true" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.3.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Gloock&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Poppins" rel='stylesheet'>
</head>

<style>
    #confirm_password {
        border-color: #efb7f0;
        border-width: 0px;
    }
</style>

<body class="bg" style="background: rgb(153,16,180);
background: linear-gradient(320deg, rgba(153,16,180,1) 0%, rgba(245,237,246,1) 0%, rgba(183,103,224,1) 100%);">

  @if (ViewBag.pass != null)
    {
        <div class="alert alert-success" role="alert">
            <b>@ViewBag.pass </b><a href="../Home/Signin" class="alert-link">  Click here to login</a>
        </div>
    }
    <h1 class="header">Good to see you again !</h1>
    <form asp-action="Changepassword" method="post">
        <div class="mb-3">
            <label for="exampleInputUsername" id="userinput" class="form-label">Password</label>
            <input type="password" asp-for="Password"  class="form-control"  placeholder="Type your password" aria-label="password" aria-describedby="password" id="password-input"style="position: absolute;width: 301px;height: 52px;    left: 150px;top: 310px;background-color: rgba(244, 72, 247, 0.27);box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);border-radius: 14px;"placeholder="Email" required />
        </div>
        <div class="mb-3">
            <label for="exampleInputPassword1" action="" id="Confrmpassword" class="form-label">Confirm Password</label>

            <input type="password" asp-for="Confirmpassword" class="form-control" placeholder="Confirm Password" id="confirm_password"style="position: absolute;width: 301px;height: 52px;left: 150px;top: 410px;background-color: rgba(244, 72, 247, 0.27);box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);border-radius: 14px;"required>
            <input type="text" asp-for="Email" class="form-control" placeholder="Confirm Password" id="confirm_password"style="position: absolute;width: 301px;height: 52px;left: 150px;top: 510px;background-color: rgba(244, 72, 247, 0.27);box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);border-radius: 14px;" value=@ViewBag.mail hidden>
            <a href="/Home/Signin" class="Forgotpassword">Back to Login</a>
        </div>
        <button type="submit" id="button" class="btn btn-primary">Submit</button>
    </form>

    <div class="image">
        <img class="mail-sent" src="../../img/Mail sent.png" class="bg-img" alt="background">
    </div>

    @if (ViewBag.Message != null)
    {

        <div style="background-color: #efb7f0;" class="alert alert-warning alert-dismissible fade show" role="alert">
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            <strong style="color: black;">Alert</strong> @ViewBag.Message
        </div>

    }


    <div class="validation">
        <div class="col-6 mt-4 mt-xxl-0 w-auto h-auto">

            <div class="alert px-4 py-3 mb-0 d-none" role="alert" data-mdb-color="warning" id="password-alert">
                <ul class="list-unstyled mb-0">
                    <li class="requirements leng">
                        <i class="fas fa-check text-success me-2"></i>
                        <i class="fas fa-times text-danger me-3"></i>
                        Your password must have at least 8 chars
                    </li>
                    <li class="requirements big-letter">
                        <i class="fas fa-check text-success me-2"></i>
                        <i class="fas fa-times text-danger me-3"></i>
                        Your password must have at least 1 big letter.
                    </li>
                    <li class="requirements num">
                        <i class="fas fa-check text-success me-2"></i>
                        <i class="fas fa-times text-danger me-3"></i>
                        Your password must have at least 1 number.
                    </li>
                    <li class="requirements special-char">
                        <i class="fas fa-check text-success me-2"></i>
                        <i class="fas fa-times text-danger me-3"></i>
                        Your password must have at least 1 special char.
                    </li>
                </ul>
            </div>

        </div>
    </div>

    </div>

    <script>
        addEventListener("DOMContentLoaded", (event) => {
            const password = document.getElementById("password-input");
            const passwordAlert = document.getElementById("password-alert");
            const requirements = document.querySelectorAll(".requirements");
            let lengBoolean, bigLetterBoolean, numBoolean, specialCharBoolean;
            let leng = document.querySelector(".leng");
            let bigLetter = document.querySelector(".big-letter");
            let num = document.querySelector(".num");
            let specialChar = document.querySelector(".special-char");
            const specialChars = "!#$%^&*()-_=@@+[{]}\\|;:'\",<.>/?`~";
            const numbers = "0123456789";

            requirements.forEach((element) => element.classList.add("wrong"));

            password.addEventListener("focus", () => {
                passwordAlert.classList.remove("d-none");
                if (!password.classList.contains("is-valid")) {
                    password.classList.add("is-invalid");
                }
            });

            password.addEventListener("input", () => {
                let value = password.value;
                if (value.length < 8) {
                    lengBoolean = false;
                } else if (value.length > 7) {
                    lengBoolean = true;
                }

                if (value.toLowerCase() == value) {
                    bigLetterBoolean = false;
                } else {
                    bigLetterBoolean = true;
                }

                numBoolean = false;
                for (let i = 0; i < value.length; i++) {
                    for (let j = 0; j < numbers.length; j++) {
                        if (value[i] == numbers[j]) {
                            numBoolean = true;
                        }
                    }
                }

                specialCharBoolean = false;
                for (let i = 0; i < value.length; i++) {
                    for (let j = 0; j < specialChars.length; j++) {
                        if (value[i] == specialChars[j]) {
                            specialCharBoolean = true;
                        }
                    }
                }

                if (lengBoolean == true && bigLetterBoolean == true && numBoolean == true && specialCharBoolean == true) {
                    password.classList.remove("is-invalid");
                    password.classList.add("is-valid");

                    requirements.forEach((element) => {
                        element.classList.remove("wrong");
                        element.classList.add("good");
                    });
                    passwordAlert.classList.remove("alert-warning");
                    passwordAlert.classList.add("alert-success");
                } else {
                    password.classList.remove("is-valid");
                    password.classList.add("is-invalid");

                    passwordAlert.classList.add("alert-warning");
                    passwordAlert.classList.remove("alert-success");

                    if (lengBoolean == false) {
                        leng.classList.add("wrong");
                        leng.classList.remove("good");
                    } else {
                        leng.classList.add("good");
                        leng.classList.remove("wrong");
                    }

                    if (bigLetterBoolean == false) {
                        bigLetter.classList.add("wrong");
                        bigLetter.classList.remove("good");
                    } else {
                        bigLetter.classList.add("good");
                        bigLetter.classList.remove("wrong");
                    }

                    if (numBoolean == false) {
                        num.classList.add("wrong");
                        num.classList.remove("good");
                    } else {
                        num.classList.add("good");
                        num.classList.remove("wrong");
                    }

                    if (specialCharBoolean == false) {
                        specialChar.classList.add("wrong");
                        specialChar.classList.remove("good");
                    } else {
                        specialChar.classList.add("good");
                        specialChar.classList.remove("wrong");
                    }
                }
            });

            password.addEventListener("blur", () => {
                passwordAlert.classList.add("d-none");
            });
        });


        var password = document.getElementById("password-input")
            , confirm_password = document.getElementById("confirm_password");

        function validatePassword() {
            if (password.value != confirm_password.value) {
                confirm_password.setCustomValidity("Passwords Don't Match");
            } else {
                confirm_password.setCustomValidity('');
            }
        }

        password.onchange = validatePassword;
        confirm_password.onkeyup = validatePassword;




    </script>

</body>